{"version":3,"file":"static/js/2.bd5c2372.chunk.js","mappings":"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","sources":["Components/CardDefault/CardDefault.tsx","Components/ChartGauge/ChartGauge.tsx","Components/Skeleton/Skeleton.tsx","Utils/others.ts","Components/Carusel/Carusel.tsx","Pages/Incentivos/Components/ListaIncentivos/ListaIncentivos.tsx","Pages/Incentivos/Components/ProgresoIncentivo/Progreso.tsx","Pages/Incentivos/Components/DescripcionIncentivo/DescripcionIncentivo.tsx","Pages/Incentivos/Incentivos.tsx","Services/Comisiones/Incentivos.ts"],"sourcesContent":["\r\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItemButton, Typography } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nexport interface CardDefaultProps {\r\n    imagen: string;\r\n    descripcion: string;\r\n    subtitulo: string;\r\n    router: string;\r\n}\r\nconst initialState = {\r\n    wrap: true,\r\n    text: \"Leer mas.\"\r\n}\r\n\r\nexport const CardDefault = ({ imagen, descripcion, subtitulo, router }: CardDefaultProps) => {\r\n    const nagivate = useNavigate();\r\n    const [{ text, wrap }, setWrap] = useState(initialState)\r\n    const onWrap = () => {\r\n        if (wrap) {\r\n            setWrap({\r\n                wrap: false,\r\n                text: 'Leer menos.'\r\n            });\r\n        }\r\n        else {\r\n            setWrap(initialState)\r\n        }\r\n    }\r\n    const onClick = () => {\r\n        if (router!=\"\") {\r\n            nagivate(router);\r\n        }\r\n    }\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }} >\r\n            <React.Fragment>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={descripcion}\r\n                    height=\"240\"\r\n                    image={`${process.env.REACT_APP_API_COMISIONES}${imagen}?w=248&fit=crop&auto=format`}\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={onClick} />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"subtitle2\" component=\"div\">\r\n                        {subtitulo}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap={wrap}>\r\n                        {descripcion}\r\n                    </Typography>\r\n                    <Link to=\"#\" style={{ fontSize: 13 }} onClick={onWrap} >{text}</Link>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" component={Link} to={router}>\r\n                        Ver condiciones incentivos\r\n                    </Button>\r\n                </CardActions>\r\n            </React.Fragment>\r\n        </Card >\r\n    );\r\n}\r\n","import ReactEcharts from \"echarts-for-react\";\r\n\r\n// register theme object\r\n\r\nexport interface ChartGaugeProps {\r\n    min: number;\r\n    max: number;\r\n    tipoValor: string;\r\n    descripcion: string;\r\n    value: number;\r\n    porcentaje: number;\r\n    titulo?: string;\r\n}\r\n\r\nexport const ChartGauge = ({ descripcion, tipoValor, max, min, value, porcentaje }: ChartGaugeProps) => {\r\n    const option = {\r\n        series: [\r\n            {\r\n                type: 'gauge',\r\n                center: ['50%', '60%'],\r\n                startAngle: 200,\r\n                endAngle: -20,\r\n                min: min,\r\n                max: max,\r\n                splitNumber: 4,\r\n                itemStyle: {\r\n                    color: '#7264FF'\r\n                },\r\n                progress: {\r\n                    show: true,\r\n                    width: 15\r\n                },\r\n                pointer: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        width: 30,\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    distance: -45,\r\n                    splitNumber: 5,\r\n                    lineStyle: {\r\n                        width: 2,\r\n                        color: '#C6C6C6'\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    distance: -50,\r\n                    length: 14,\r\n                    lineStyle: {\r\n                        width: 3,\r\n                        color: '#C6C6C6'\r\n                    }\r\n                },\r\n                axisLabel: {\r\n                    distance: -30,\r\n                    color: '#000000',\r\n                    fontSize: 11,\r\n                    formatter: function (value: any) {\r\n                        return `${value} ${tipoValor}`;\r\n                    }\r\n                },\r\n                anchor: {\r\n                    show: false\r\n                },\r\n                title: {\r\n                    show: false\r\n                },\r\n                detail: {\r\n                    valueAnimation: true,\r\n                    width: '60%',\r\n                    lineHeight: 40,\r\n                    borderRadius: 8,\r\n                    offsetCenter: [0, '-15%'],\r\n                    fontSize: 20,\r\n                    fontWeight: 'bolder',\r\n                    formatter: `${porcentaje}%`,\r\n                    color: 'inherit'\r\n                },\r\n                data: [\r\n                    {\r\n                        value: value,\r\n                        name: descripcion,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'gauge',\r\n                center: ['50%', '60%'],\r\n                startAngle: 200,\r\n                endAngle: -20,\r\n                min: 0,\r\n                max: 60,\r\n                itemStyle: {\r\n                    color: '#B6B6B6'\r\n                },\r\n                progress: {\r\n                    show: true,\r\n                    width: 9\r\n                },\r\n                pointer: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: false\r\n                },\r\n                detail: {\r\n                    show: false\r\n                },\r\n                data: [\r\n                    {\r\n                        value: value,\r\n                        name: descripcion,\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n    return (\r\n        <ReactEcharts\r\n            option={option}\r\n            className='echarts-for-echarts'\r\n            style={{ height: '320px', width: '100%' }}\r\n            opts={{ renderer: 'svg' }}\r\n        />);\r\n\r\n}\r\n","import { Skeleton, Stack } from \"@mui/material\";\r\nimport { CreateArray } from \"../../Utils/others\";\r\n\r\ninterface SkeletonLoadProps {\r\n    previewLoad: number;\r\n    height: number;\r\n}\r\nexport const SkeletonLoad = ({ previewLoad, height }: SkeletonLoadProps) => {\r\n    const loadInicial = CreateArray(previewLoad);\r\n    return (\r\n        <>\r\n            {\r\n                loadInicial.map((initial, i) => (\r\n                    <Stack key={i} spacing={1} sx={{ minWidth: '100%' }} style={{ alignItems: \"center\" }} >\r\n                        <Skeleton variant=\"rounded\" sx={{ width: '100%' }} height={height} />\r\n                    </Stack>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n};","export const CreateArray = (valor: number): number[] => {\r\n    let loadInicial = [];\r\n    let i = 0\r\n    while (i < valor) {\r\n        loadInicial.push(i);\r\n        i++;\r\n    }\r\n    return loadInicial;\r\n}","import Carousel from 'react-material-ui-carousel';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport { IIncentivoImagenes } from '../../Services/Comisiones/Interfaces/IIncentivos';\r\nimport { Paper } from '@mui/material';\r\n\r\nconst Item = ({ descripcion, imagen }: IIncentivoImagenes) => {\r\n    return (\r\n\r\n            <div style={{ textAlign: 'center',height: 500  }}>\r\n                <img\r\n                    width={500}\r\n                    src={`${process.env.REACT_APP_API_COMISIONES}${imagen}?w=248&fit=crop&auto=format`}\r\n                    alt={descripcion}\r\n                    loading=\"lazy\"\r\n                />\r\n            </div>\r\n    )\r\n}\r\ninterface IResponseIncentivoIndex {\r\n    imagenes: IIncentivoImagenes[];\r\n}\r\nexport const Carusel = ({ imagenes }: IResponseIncentivoIndex) => {\r\n\r\n    return (<Carousel\r\n        NextIcon={<ArrowForwardIosIcon />}\r\n        PrevIcon={<ArrowBackIosNewIcon />}\r\n    >\r\n        {\r\n            imagenes.map((item, i) => <Item key={i} descripcion={item.descripcion} imagen={item.imagen} />)\r\n        }\r\n    </Carousel>\r\n    )\r\n}\r\n","import { Grid } from '@mui/material'\r\nimport { AxiosError } from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CardDefault, CardDefaultProps } from '../../../../Components/CardDefault/CardDefault';\r\nimport { SkeletonLoad } from '../../../../Components/Skeleton/Skeleton';\r\nimport { setToken } from '../../../../Reducers/Slices/LoginSlice';\r\nimport { ListaIncentivosService } from '../../../../Services/Comisiones/Incentivos';\r\nimport { IListaIncentivo } from '../../../../Services/Comisiones/Interfaces/IIncentivos';\r\nimport { ErrorAxios } from '../../../../Utils/AxiosError';\r\n\r\nconst initalState: IListaIncentivo[] = [];\r\nexport const ListaIncentivos = () => {\r\n    const nagivate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const updateToken = (token: boolean) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n    const [listaIncentivos, setListIncentivos] = useState(initalState);\r\n\r\n    const [carga, setCarga] = useState(true);\r\n\r\n    const incetivosIndexApi = async () => {\r\n        try {\r\n            const { data, headers } = await ListaIncentivosService()\r\n            setListIncentivos(data.data)\r\n            setCarga(false);\r\n        } catch (error) {\r\n            const err = error as AxiosError;\r\n            let detectError = ErrorAxios(err.response?.status);\r\n            updateToken(detectError.statusToken);\r\n            nagivate(detectError.route);\r\n            setCarga(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        incetivosIndexApi()\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [setListIncentivos])\r\n\r\n    return (\r\n        <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\" >\r\n            {listaIncentivos.map((item, i) => (\r\n                <Grid key={i} item xs={12} sm={4} sx={{ p: 1 }}>\r\n                    {\r\n                        carga ? (<SkeletonLoad previewLoad={1} height={350}/>) : (\r\n                            <CardDefault key={i} descripcion={item.descripcion} subtitulo={item.titulo} imagen={item.imagen} router=''></CardDefault>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n","import { Card, CardContent, Grid, Paper, Typography } from '@mui/material'\r\nimport { AxiosError } from 'axios'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { ChartGauge, ChartGaugeProps } from '../../../../Components/ChartGauge/ChartGauge'\r\nimport { SkeletonLoad } from '../../../../Components/Skeleton/Skeleton'\r\nimport { setToken } from '../../../../Reducers/Slices/LoginSlice'\r\nimport { IncentivosProgresoService } from '../../../../Services/Comisiones/Incentivos'\r\nimport { ErrorAxios } from '../../../../Utils/AxiosError'\r\n\r\nconst initialState: ChartGaugeProps[] = [];\r\nexport const ProgresoIncentivo = () => {\r\n    const [data, setProgreso] = useState(initialState);\r\n    const [carga, setCarga] = useState(true);\r\n\r\n    const nagivate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const updateToken = (token: boolean) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n    const ProgresoApi = async () => {\r\n        try {\r\n            const { data, headers } = await IncentivosProgresoService()\r\n            setProgreso(data.data)\r\n            setCarga(false);\r\n        } catch (error) {\r\n            const err = error as AxiosError;\r\n            let detectError = ErrorAxios(err.response?.status);\r\n            updateToken(detectError.statusToken);\r\n            nagivate(detectError.route);\r\n            setCarga(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        ProgresoApi();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [setProgreso])\r\n    return (\r\n        <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\" >\r\n            {\r\n                data.map((item, i) => (\r\n                    <Grid key={i} item xs={12} sm={12 / data.length} sx={{ p: 1 }}>\r\n                        {\r\n                            carga ? (<SkeletonLoad previewLoad={1} height={350} />) : (\r\n                                <Card key={i} sx={{ minWidth: '100%' }} >\r\n                                    <React.Fragment>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" component=\"h6\" style={{ fontWeight: 'bold' }} align=\"center\" >\r\n                                                {item.titulo}\r\n                                            </Typography>\r\n                                            <ChartGauge\r\n                                                descripcion={item.descripcion}\r\n                                                min={item.min}\r\n                                                max={item.max}\r\n                                                tipoValor={item.tipoValor}\r\n                                                value={item.value}\r\n                                                porcentaje={item.porcentaje} />\r\n                                        </CardContent>\r\n                                    </React.Fragment>\r\n                                </Card>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Box, Button, Card, CardContent, Typography } from '@mui/material';\r\ninterface DescripcionIncentivoProps {\r\n    titulo: string;\r\n    descripcion: string;\r\n    nombreBonton?: string;\r\n}\r\nexport const DescripcionIncentivo = ({ descripcion, titulo, nombreBonton }: DescripcionIncentivoProps) => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }}>\r\n            <React.Fragment>\r\n                <CardContent>\r\n                    <Box alignItems=\"center\" >\r\n                        <Typography component=\"div\" variant=\"subtitle1\" align=\"center\">\r\n                            {titulo}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Typography component=\"div\" variant=\"subtitle2\" align=\"center\">\r\n\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" component=\"div\" align=\"center\">\r\n                        {descripcion}\r\n                    </Typography>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Button size=\"small\">{nombreBonton ? 'Ver condiciones incentivos' : nombreBonton}</Button>\r\n                    </div>\r\n                </CardContent>\r\n            </React.Fragment>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { CBreadcrumbs } from '../../Components/CBreadcrumbs'\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport { Grid, Typography } from '@mui/material';\r\nimport { Carusel } from '../../Components/Carusel/Carusel';\r\nimport { ListaIncentivos } from './Components/ListaIncentivos/ListaIncentivos';\r\nimport { ProgresoIncentivo } from './Components/ProgresoIncentivo/Progreso';\r\nimport { DescripcionIncentivo } from './Components/DescripcionIncentivo/DescripcionIncentivo';\r\nimport { useState } from 'react';\r\nimport { IncentivoIndexService } from '../../Services/Comisiones/Incentivos';\r\nimport { AxiosError } from 'axios';\r\nimport { ErrorAxios } from '../../Utils/AxiosError';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToken } from '../../Reducers/Slices/LoginSlice';\r\nimport { IIncentivoIndex } from '../../Services/Comisiones/Interfaces/IIncentivos';\r\nimport { SkeletonLoad } from '../../Components/Skeleton/Skeleton';\r\nconst initialState: IIncentivoIndex = {\r\n    descripcion: 'Error al obtener Incentivos',\r\n    imagenes: [],\r\n    titulo: 'Incentivos'\r\n}\r\nconst Incentivos = () => {\r\n    const [{ descripcion, imagenes, titulo }, setIncentivos] = useState<IIncentivoIndex>(initialState);\r\n    const [carga, setCarga] = useState(true);\r\n\r\n\r\n    const nagivate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const updateToken = (token: boolean) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n\r\n    const incetivosIndexApi = async () => {\r\n        try {\r\n            const { data, headers } = await IncentivoIndexService()\r\n            setIncentivos(data.data)\r\n            setCarga(false);\r\n        } catch (error) {\r\n            const err = error as AxiosError;\r\n            let detectError = ErrorAxios(err.response?.status);\r\n            updateToken(detectError.statusToken);\r\n            nagivate(detectError.route);\r\n            setCarga(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        incetivosIndexApi();\r\n        return () => {\r\n\r\n        }\r\n    }, [setIncentivos])\r\n\r\n    return (\r\n        <>\r\n            <CBreadcrumbs icon={<DashboardIcon />} nombreRoute={\"Tablero\"} route={\"/inicio\"} nombresRoutes={['incentivos']} routes={['#']}></CBreadcrumbs>\r\n            <Typography variant=\"subtitle1\" component=\"h6\" style={{ fontWeight: 'bold' }} sx={{ pl: 1, pr: 1 }}>\r\n                Incentivos\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom sx={{ pl: 1, pr: 1 }}>\r\n                Promociones y eventos\r\n            </Typography>\r\n            <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\" >\r\n                <Grid item xs={12} sm={12} sx={{ p: 1 }}>\r\n                    {\r\n                        carga ? (<SkeletonLoad previewLoad={1} height={350} />) : (\r\n                            <Carusel imagenes={imagenes} />\r\n                        )\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} sx={{ p: 1 }}>\r\n                    {\r\n                        carga ? (<SkeletonLoad previewLoad={1} height={120} />) : (\r\n                            <DescripcionIncentivo descripcion={descripcion} titulo={titulo} />\r\n                        )\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} sx={{ p: 1 }}>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} sx={{ p: 1 }}>\r\n                    <ProgresoIncentivo />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography variant=\"body2\" gutterBottom sx={{ pl: 1, pr: 1 }}>\r\n                        Incentivos anteriores\r\n                    </Typography>\r\n                    <ListaIncentivos />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\nexport default Incentivos;\r\n","import axios from 'axios';\r\nimport { AxiosRequest, AxiosResponse } from '../../Utils/Axios';\r\nimport { IResponseChartProgresoIncentivo, IResponseIncentivoIndex, IResponseIncentivoLista } from './Interfaces/IIncentivos';\r\n//llamada a interceptor\r\nAxiosRequest();\r\nAxiosResponse();\r\nexport async function IncentivoIndexService() {\r\n    return await axios.get<IResponseIncentivoIndex>(`${process.env.REACT_APP_API_COMISIONES}api/incentivo`);\r\n}\r\nexport async function ListaIncentivosService() {\r\n    return await axios.get<IResponseIncentivoLista>(`${process.env.REACT_APP_API_COMISIONES}api/incentivo/list`);\r\n}\r\nexport async function IncentivosProgresoService() {\r\n    return await axios.get<IResponseChartProgresoIncentivo>(`${process.env.REACT_APP_API_COMISIONES}api/incentivo/chart-gauge`);\r\n}\r\n\r\n"],"names":["initialState","wrap","text","CardDefault","imagen","descripcion","subtitulo","router","nagivate","useNavigate","useState","setWrap","sx","minWidth","component","alt","height","image","process","style","cursor","onClick","gutterBottom","variant","color","noWrap","to","fontSize","size","Link","ChartGauge","tipoValor","max","min","value","porcentaje","option","series","type","center","startAngle","endAngle","splitNumber","itemStyle","progress","show","width","pointer","axisLine","lineStyle","axisTick","distance","splitLine","length","axisLabel","formatter","anchor","title","detail","valueAnimation","lineHeight","borderRadius","offsetCenter","fontWeight","data","name","className","opts","renderer","SkeletonLoad","previewLoad","loadInicial","valor","i","push","CreateArray","map","initial","Stack","spacing","alignItems","Skeleton","Item","textAlign","src","loading","Carusel","imagenes","NextIcon","ArrowForwardIos","PrevIcon","ArrowBackIosNew","item","initalState","ListaIncentivos","dispatch","useDispatch","listaIncentivos","setListIncentivos","carga","setCarga","incetivosIndexApi","ListaIncentivosService","headers","err","detectError","ErrorAxios","response","status","token","statusToken","setToken","route","useEffect","Grid","container","xs","justifyContent","sm","p","titulo","ProgresoIncentivo","setProgreso","ProgresoApi","IncentivosProgresoService","Card","CardContent","Typography","align","DescripcionIncentivo","nombreBonton","Box","Button","setIncentivos","IncentivoIndexService","CBreadcrumbs","icon","Dashboard","nombreRoute","nombresRoutes","routes","pl","pr","axios","AxiosRequest","AxiosResponse"],"sourceRoot":""}