{"version":3,"file":"static/js/795.3249dca8.chunk.js","mappings":"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","sources":["Components/CardDetail/CardDetail.tsx","Components/ChartGauge/ChartGauge.tsx","Components/Modal/ModalRangos.tsx","Pages/Home/Components/CModalRangos/CModalRangos.tsx","Services/Comisiones/MonteSionService.ts","Pages/MonteSion/Components/DataGrid/DataGridMontesion.tsx","Pages/MonteSion/Components/ProximoRango/ProximoRango.tsx","Pages/MonteSion/Components/ListCardResumen/ResumenMonteSion.tsx","Pages/MonteSion/Progreso/Progreso.tsx","Components/ChartLineHorizontal/ChartLineHorizontal.tsx","Pages/MonteSion/Components/CChartLineResumenAvance/CChartLineResumenAvance.tsx","Pages/MonteSion/MonteSion.tsx","Services/Comisiones/Home.ts"],"sourcesContent":["import { Box, Card, CardActionArea, CardContent, CardMedia, Tooltip, Typography } from '@mui/material'\r\n\r\ninterface CardDetailProps {\r\n    imagen: string;\r\n    descripcion: string;\r\n    rango: string;\r\n    detalle: string;\r\n    color?: boolean;\r\n    onClick: React.MouseEventHandler<HTMLSpanElement>\r\n}\r\nexport const CardDetail = ({ imagen, descripcion, detalle, rango, color, onClick }: CardDetailProps) => {\r\n    return (\r\n        <Card sx={{ minWidth: '100%' }} style={{ alignItems: \"center\", background: (color ? 'linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 12%, rgba(0,212,255,1) 100%)' : '#FFFFFF') }} >\r\n            <CardContent sx={{ display: 'flex' }} style={{ padding: 0 }}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    sx={{ width: 96, alignItems: \"center\" }}\r\n                    image={`${process.env.REACT_APP_API_COMISIONES}${imagen}`}\r\n                    alt={rango}\r\n                    loading=\"lazy\"\r\n                />\r\n                <Box style={{ width: '100%' }}>\r\n                    <CardContent style={{ padding: 10 }}>\r\n                        <Typography\r\n                            variant=\"body2\" sx={{ m: 0 }}\r\n                            align={'center'}\r\n                        >\r\n                            {descripcion}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            sx={{\r\n                                m: 0,\r\n                                \"&:hover\": {\r\n                                    background: \"linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(197,197,197,1) 100%)\",\r\n                                }\r\n                            }}\r\n                            align={'center'}\r\n                            style={{ fontWeight: 'bold', cursor: 'pointer' }}\r\n                            onClick={onClick}\r\n                        >\r\n                            {rango}\r\n                        </Typography>\r\n                        <hr style={{ margin: 0, textAlign: 'center' }} />\r\n                        <Typography component=\"div\" variant=\"body2\" align={'center'}>\r\n                            {detalle}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import ReactEcharts from \"echarts-for-react\";\r\n\r\n// register theme object\r\n\r\nexport interface ChartGaugeProps {\r\n    min: number;\r\n    max: number;\r\n    tipoValor: string;\r\n    descripcion: string;\r\n    value: number;\r\n    porcentaje: number;\r\n    titulo?: string;\r\n}\r\n\r\nexport const ChartGauge = ({ descripcion, tipoValor, max, min, value, porcentaje }: ChartGaugeProps) => {\r\n    const option = {\r\n        series: [\r\n            {\r\n                type: 'gauge',\r\n                center: ['50%', '60%'],\r\n                startAngle: 200,\r\n                endAngle: -20,\r\n                min: min,\r\n                max: max,\r\n                splitNumber: 4,\r\n                itemStyle: {\r\n                    color: '#7264FF'\r\n                },\r\n                progress: {\r\n                    show: true,\r\n                    width: 15\r\n                },\r\n                pointer: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        width: 30,\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    distance: -45,\r\n                    splitNumber: 5,\r\n                    lineStyle: {\r\n                        width: 2,\r\n                        color: '#C6C6C6'\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    distance: -50,\r\n                    length: 14,\r\n                    lineStyle: {\r\n                        width: 3,\r\n                        color: '#C6C6C6'\r\n                    }\r\n                },\r\n                axisLabel: {\r\n                    distance: -30,\r\n                    color: '#000000',\r\n                    fontSize: 11,\r\n                    formatter: function (value: any) {\r\n                        return `${value} ${tipoValor}`;\r\n                    }\r\n                },\r\n                anchor: {\r\n                    show: false\r\n                },\r\n                title: {\r\n                    show: false\r\n                },\r\n                detail: {\r\n                    valueAnimation: true,\r\n                    width: '60%',\r\n                    lineHeight: 40,\r\n                    borderRadius: 8,\r\n                    offsetCenter: [0, '-15%'],\r\n                    fontSize: 20,\r\n                    fontWeight: 'bolder',\r\n                    formatter: `${porcentaje}%`,\r\n                    color: 'inherit'\r\n                },\r\n                data: [\r\n                    {\r\n                        value: value,\r\n                        name: descripcion,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'gauge',\r\n                center: ['50%', '60%'],\r\n                startAngle: 200,\r\n                endAngle: -20,\r\n                min: 0,\r\n                max: 60,\r\n                itemStyle: {\r\n                    color: '#B6B6B6'\r\n                },\r\n                progress: {\r\n                    show: true,\r\n                    width: 9\r\n                },\r\n                pointer: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    show: false\r\n                },\r\n                detail: {\r\n                    show: false\r\n                },\r\n                data: [\r\n                    {\r\n                        value: value,\r\n                        name: descripcion,\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n    return (\r\n        <ReactEcharts\r\n            option={option}\r\n            className='echarts-for-echarts'\r\n            style={{ height: '320px', width: '100%' }}\r\n            opts={{ renderer: 'svg' }}\r\n        />);\r\n\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\n\r\nimport { CardDetail } from '../CardDetail/CardDetail';\r\nimport { DialogContent, Typography } from '@mui/material';\r\nimport { IResponseRangos } from '../../Services/Comisiones/Interfaces/IHome';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport interface SimpleDialogProps {\r\n    open: boolean;\r\n    selectedValue: IResponseRangos;\r\n    onClose: (value: IResponseRangos) => void;\r\n    listRangos: IResponseRangos[]\r\n}\r\n\r\nexport const ModalRangos = (props: SimpleDialogProps) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\r\n    const { onClose, selectedValue, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value: IResponseRangos) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose}\r\n            open={open}\r\n            scroll={scroll}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle component=\"div\" variant=\"subtitle1\" align=\"center\">\r\n                Todos los rangos\r\n                <Typography variant='subtitle2' >Comisiones de cuerdo a las ventas registradas durante el mes en monte Sion</Typography>\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <List>\r\n                    {props.listRangos.map((rango, i) => (\r\n                        <ListItem disableGutters key={i} >\r\n                            <ListItemButton\r\n                                onClick={() => {\r\n                                    rango.enUso ? navigate('/monte-sion') : handleListItemClick(rango)\r\n                                }}\r\n                                key={i}>\r\n                                <CardDetail\r\n                                    rango={rango.subtitulo}\r\n                                    descripcion={rango.titulo}\r\n                                    detalle={rango.descripcion}\r\n                                    imagen={rango.imagen}\r\n                                    color={rango.enUso}\r\n                                    onClick={()=>{}}\r\n                                />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { ModalRangos } from '../../../../Components/Modal/ModalRangos'\r\nimport { IResponseRangos } from '../../../../Services/Comisiones/Interfaces/IHome';\r\nimport { TodosRangoService } from '../../../../Services/Comisiones/Home';\r\n\r\ninterface CModalRangos {\r\n    open: boolean;\r\n    onClose: (value: IResponseRangos) => void;\r\n}\r\nconst CModalRangos = ({ open, onClose }: CModalRangos) => {\r\n    //const [open, setOpen] = useState(false);\r\n    const [rangos, setRangos] = useState<IResponseRangos[]>([]);\r\n    const [carga, setCarga] = useState(true);\r\n    const getTarjetas = async () => {\r\n        try {\r\n            const { data } = await TodosRangoService();\r\n            if (data.status == 1) {\r\n                setRangos(data.data.todosRangos);\r\n                setCarga(false);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const [selectedValue, setSelectedValue] = useState<IResponseRangos>({\r\n        descripcion: '',\r\n        enUso: false,\r\n        imagen: '',\r\n        subtitulo: '',\r\n        titulo: ''\r\n    });\r\n    useEffect(() => {\r\n        getTarjetas();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <ModalRangos\r\n                listRangos={rangos}\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={(e) => { onClose(e) }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CModalRangos\r\n","import axios from 'axios';\r\nimport { AxiosRequest, AxiosResponse } from '../../Utils/Axios';\r\nimport { IResponseCardMonteSion, IResponseDataGridMonteSion, IResponseChartProgreso, IResponseRangos, IResponseCharLineal } from './Interfaces/MonteSion';\r\n//llamada a interceptor\r\nAxiosRequest();\r\nAxiosResponse();\r\nexport async function DataGridMonteSionService() {\r\n    return await axios.get<IResponseDataGridMonteSion>(`${process.env.REACT_APP_API_COMISIONES}api/monte-sion/data-grid`);\r\n}\r\nexport async function ResumenMonteSionService() {\r\n    return await axios.get<IResponseCardMonteSion>(`${process.env.REACT_APP_API_COMISIONES}api/monte-sion/resumen-card`);\r\n}\r\nexport async function SiguenteNivelService() {\r\n    return await axios.get<IResponseRangos>(`${process.env.REACT_APP_API_COMISIONES}api/monte-sion/rangos`);\r\n}\r\nexport async function ProgresoService() {\r\n    return await axios.get<IResponseChartProgreso>(`${process.env.REACT_APP_API_COMISIONES}api/monte-sion/chart-gauge`);\r\n}\r\nexport async function ChartLinealService() {\r\n    return await axios.get<IResponseCharLineal>(`${process.env.REACT_APP_API_COMISIONES}api/monte-sion/chart-lineal`);\r\n}\r\n\r\n","import { DataTypeProvider, IntegratedFiltering, IntegratedSorting, SearchState, Sorting, SortingState } from '@devexpress/dx-react-grid';\r\nimport { Grid, SearchPanel, Table, TableFixedColumns, TableHeaderRow, Toolbar, VirtualTable } from '@devexpress/dx-react-grid-material-ui';\r\nimport { Paper, CardContent } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Loading } from '../../../../Components/Loading/Loading';\r\nimport { DataGridMonteSionService } from '../../../../Services/Comisiones/MonteSionService';\r\ninterface Row {\r\n    Num: number;\r\n    nombreCompleto: string;\r\n    generacion: number;\r\n    ventas: number;\r\n    cantidad: number;\r\n};\r\nexport const DataGridMontesion = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [tableColumnExtensions] = useState([\r\n        { columnName: 'Num', width: 100 },\r\n        { columnName: 'nombreCompleto' },\r\n        { columnName: 'generacion' },\r\n        { columnName: 'ventas', width: 200 },\r\n        { columnName: 'cantidad', width: 150 }\r\n    ]);\r\n    const [columns] = useState([\r\n        { name: 'Num', title: '#' },\r\n        { name: 'nombreCompleto', title: 'Nombre Completo' },\r\n        { name: 'generacion', title: 'Generacion' },\r\n        { name: 'ventas', title: 'Total Vendido $US' },\r\n        { name: 'cantidad', title: 'Cantidad' },\r\n    ]);\r\n    const [rows, setRows] = useState<Row[]>([]);\r\n    const [sorting, setSorting] = useState<Sorting[]>([{ columnName: 'Num', direction: 'asc' }]);\r\n    const [dateColumnVentas] = useState(['ventas']);\r\n\r\n    const columnVentas = ({ value }: any) => (`${value.toLocaleString('es-MX')} $US`);\r\n    const CurrencyVentas = (props: any) => (\r\n        <DataTypeProvider\r\n            formatterComponent={columnVentas}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    const loadDataGrid = async () => {\r\n        try {\r\n            const { data } = await DataGridMonteSionService();\r\n            let dataGrid: Row[] = [];\r\n            data.data.map((ele, i) => {\r\n                dataGrid.push({\r\n                    cantidad: ele.cantidad,\r\n                    nombreCompleto: ele.nombreCompleto,\r\n                    generacion: ele.generacion,\r\n                    Num: i + 1,\r\n                    ventas: ele.precio\r\n                })\r\n            })\r\n            setRows(dataGrid);\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n        }\r\n\r\n\r\n    };\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        loadDataGrid();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Paper style={{ position: 'relative' }}>\r\n                <Grid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                >\r\n                    <SearchState />\r\n                    <IntegratedFiltering />\r\n                    <Toolbar />\r\n                    <SearchPanel />\r\n                    <CurrencyVentas\r\n                        for={dateColumnVentas}\r\n                    />\r\n                    <SortingState\r\n                        sorting={sorting}\r\n                        onSortingChange={setSorting}\r\n                    />\r\n                    <IntegratedSorting />\r\n                    <VirtualTable columnExtensions={tableColumnExtensions} />\r\n                    <TableHeaderRow showSortingControls />\r\n                    <TableFixedColumns />\r\n                </Grid>\r\n                {loading && <Loading />}\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n","import { Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CardDetail } from '../../../../Components/CardDetail/CardDetail'\r\nimport { IRangosTipo } from '../../../../Services/Comisiones/Interfaces/MonteSion'\r\nimport { SiguenteNivelService } from '../../../../Services/Comisiones/MonteSionService'\r\nimport CModalRangos from '../../../Home/Components/CModalRangos/CModalRangos'\r\nimport { IResponseRangos } from '../../../../Services/Comisiones/Interfaces/IHome'\r\n\r\nconst InitialState: IRangosTipo = {\r\n    allRangos: {\r\n        descripcion: '',\r\n        detalle: '',\r\n        imagen: '',\r\n        rango: ''\r\n    },\r\n    rangoActual: {\r\n        descripcion: '',\r\n        detalle: '',\r\n        imagen: '',\r\n        rango: ''\r\n    },\r\n    siguenteRango: {\r\n        descripcion: '',\r\n        detalle: '',\r\n        imagen: '',\r\n        rango: ''\r\n    }\r\n}\r\nexport const ProximoRango = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value: IResponseRangos) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [{ rangoActual, siguenteRango }, setRangos] = useState(InitialState);\r\n    const SiguentenivelApi = async () => {\r\n        const { data } = await SiguenteNivelService();\r\n        setRangos(data.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        SiguentenivelApi()\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <CardDetail\r\n                        rango={rangoActual.rango}\r\n                        descripcion={rangoActual.descripcion}\r\n                        detalle={rangoActual.detalle}\r\n                        imagen={rangoActual.imagen} color={true}\r\n                        onClick={() => { }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <CardDetail\r\n                        rango={siguenteRango.rango}\r\n                        descripcion={siguenteRango.descripcion}\r\n                        detalle={siguenteRango.detalle}\r\n                        imagen={siguenteRango.imagen}\r\n                        onClick={() => { }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <CardDetail\r\n                        rango={\"Ver todos\"}\r\n                        descripcion={'Rangos'}\r\n                        detalle={\"Vista general de todos los rango\"}\r\n                        imagen={\"assest/achievments/rangos.png\"}\r\n                        onClick={handleClickOpen}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <CModalRangos open={open} onClose={handleClose} />\r\n        </>\r\n    )\r\n}\r\n","import { Grid, Skeleton, Stack } from '@mui/material';\r\nimport { AxiosError } from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setToken } from '../../../../Reducers/Slices/LoginSlice';\r\nimport { ICCard } from '../../../../Services/Comisiones/Interfaces/IHome';\r\nimport { ResumenMonteSionService } from '../../../../Services/Comisiones/MonteSionService';\r\nimport { ErrorAxios } from '../../../../Utils/AxiosError';\r\nimport { CreateArray } from '../../../../Utils/others';\r\nimport CCardResumen from '../../../../Components/CCardResumen/CCardResumen';\r\n\r\ninterface ResunMontemeSionProps {\r\n    previewLoad: number;\r\n}\r\nexport const ResumenMontemeSion = ({ previewLoad }: ResunMontemeSionProps) => {\r\n    const nagivate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const updateToken = (token: boolean) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n    const [tarjetas, setTarjetas] = useState<ICCard[]>([]);\r\n    const [carga, setCarga] = useState(true);\r\n    const getTarjetas = async () => {\r\n        try {\r\n            const { data } = await ResumenMonteSionService();\r\n            console.log(data)\r\n            if (data.status == 1) {\r\n                setTarjetas(data.data);\r\n                setCarga(false);\r\n            }\r\n            else {\r\n\r\n            }\r\n        } catch (error) {\r\n            const err = error as AxiosError;\r\n            let detectError = ErrorAxios(err.response?.status);\r\n            updateToken(detectError.statusToken);\r\n            nagivate(detectError.route);\r\n\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getTarjetas();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {tarjetas.map((tarjeta, i) => {\r\n                return (<CCardResumen\r\n                    key={i}\r\n                    icon={tarjeta.icon}\r\n                    color={tarjeta.color}\r\n                    descripcion={tarjeta.titulo}\r\n                    monto={tarjeta.valor}\r\n                    route={tarjeta.routeApp}\r\n                    textToolip={''}\r\n                    estado={carga}\r\n                />)\r\n            })}\r\n        </>\r\n    );\r\n}\r\n","import { Card, CardContent, Paper, Typography } from '@mui/material'\r\nimport { AxiosError } from 'axios'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { ChartGauge, ChartGaugeProps } from '../../../Components/ChartGauge/ChartGauge'\r\nimport { setToken } from '../../../Reducers/Slices/LoginSlice'\r\nimport { ProgresoService } from '../../../Services/Comisiones/MonteSionService'\r\nimport { ErrorAxios } from '../../../Utils/AxiosError'\r\n\r\nconst initialState: ChartGaugeProps = {\r\n    descripcion: '',\r\n    max: 0,\r\n    min: 0,\r\n    tipoValor: '$US',\r\n    value: 0,\r\n    porcentaje: 0,\r\n    titulo: ''\r\n}\r\nexport const Progreso = () => {\r\n    const [{ descripcion, max, min, tipoValor, value, porcentaje, titulo }, setProgreso] = useState(initialState);\r\n    const nagivate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const updateToken = (token: boolean) => {\r\n        dispatch(\r\n            setToken({\r\n                token: token\r\n            })\r\n        )\r\n    }\r\n    const ProgresoApi = async () => {\r\n        try {\r\n            const { data, headers } = await ProgresoService()\r\n            setProgreso(data.data)\r\n        } catch (error) {\r\n            const err = error as AxiosError;\r\n            let detectError = ErrorAxios(err.response?.status);\r\n            updateToken(detectError.statusToken);\r\n            nagivate(detectError.route);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        ProgresoApi();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [setProgreso])\r\n\r\n    return (\r\n        <Card sx={{ minWidth: '100%', m: 0 }} >\r\n            <React.Fragment>\r\n                <CardContent>\r\n                    <Typography variant=\"caption\" component=\"h6\" style={{ fontWeight: 'bold' }} align=\"center\" >\r\n                        {titulo}\r\n                    </Typography>\r\n                    <ChartGauge descripcion={descripcion} min={min} max={max} tipoValor={tipoValor} value={value} porcentaje={porcentaje} />\r\n                </CardContent>\r\n            </React.Fragment>\r\n        </Card>\r\n    )\r\n}\r\n","import ReactEcharts from \"echarts-for-react\";\r\nimport { dataFake } from \"../../Pages/MonteSion/data\";\r\n\r\n// register theme object\r\n\r\nexport interface ChartLineHorizontalProps {\r\n    titulo: string;\r\n    tituloX: string;\r\n    tituloY: string;\r\n    data: string[][]\r\n}\r\n\r\nexport const ChartLineHorizontal = ({ titulo, tituloX, tituloY, data }: ChartLineHorizontalProps) => {\r\n    const option = {\r\n        responsive: false,\r\n        scale: true,\r\n        scaleSize: 20,\r\n        grid: [{ top: '20%' }],\r\n        dataset: [\r\n            {\r\n                id: 'dataset_raw',\r\n                source: data\r\n            },\r\n            {\r\n                id: 'dataset_since_1950_of_germany',\r\n                fromDatasetId: 'dataset_raw',\r\n                transform: {\r\n                    type: 'filter',\r\n                    config: {\r\n                        and: [\r\n                            { dimension: 'Dia', gte: 1 },\r\n                            /*  { dimension: 'Precio', '=': 'Germany' } */\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n        ],\r\n        title: {\r\n            text: titulo,\r\n            textStyle: {\r\n                //color: '#00000',\r\n                fontSize: 14,\r\n                fontFamily: 'Arial',\r\n            },\r\n\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis',\r\n        },\r\n        xAxis: {\r\n            name: tituloX,\r\n            type: 'category',\r\n            nameLocation: 'middle',\r\n            //nameLocation: 'end',\r\n            //data:['1','2'],\r\n            nameTextStyle: {\r\n                align: 'center',\r\n                verticalAlign: 'top',\r\n                fontSize: 12,\r\n                color: '#000000',\r\n                padding: 20,\r\n            }\r\n        },\r\n        yAxis: {\r\n            name: tituloY,\r\n            axisLabel: {\r\n                distance: -30,\r\n                fontSize: 12,\r\n                formatter: function (value: any) {\r\n                    return `${value} $US`;\r\n                }\r\n            },\r\n            nameLocation: 'end',\r\n            //data:['1','2'],\r\n            nameGap: 0,\r\n            nameTextStyle: {\r\n                align: 'right',\r\n                verticalAlign: 'top',\r\n                fontSize: 12,\r\n                color: '#000000',\r\n                padding: [-40, 0, 0, 0],\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Venta',\r\n                type: 'line',\r\n                datasetId: 'dataset_since_1950_of_germany',\r\n                showSymbol: false,\r\n                tooltip: {\r\n                    valueFormatter: (value: any, otro: any) => value + ' $US'\r\n                },\r\n                encode: {\r\n                    x: 'Dia',\r\n                    y: 'PrecioTotal',\r\n                    itemName: 'Dia',\r\n                    tooltip: ['Precio Total']\r\n                }\r\n            },\r\n            /*  {\r\n                 name: 'Evaporation',\r\n                 type: 'line',\r\n                 datasetId: 'dataset_since_1950_of_france',\r\n                 showSymbol: false,\r\n                 tooltip: {\r\n                     valueFormatter: (value: any) => value + ' $dsfsdfsdf'\r\n                 },\r\n                 encode: {\r\n                     x: 'Dia',\r\n                     y: 'PrecioTotal',\r\n                     itemName: 'Dia',\r\n                     tooltip: ['Precio Total']\r\n                 }\r\n             } */\r\n        ]\r\n    };\r\n    return (\r\n        <ReactEcharts\r\n            option={option}\r\n            className='echarts-for-echarts'\r\n            style={{ height: '550px', width: '100%' }}\r\n            opts={{ renderer: 'svg' }}\r\n        />);\r\n\r\n}\r\n","import { Card, CardContent, Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ChartLineHorizontal } from '../../../../Components/ChartLineHorizontal/ChartLineHorizontal'\r\nimport { ChartLinealService } from '../../../../Services/Comisiones/MonteSionService'\r\nimport { IDataChartLineal } from '../../../../Services/Comisiones/Interfaces/MonteSion'\r\ninterface CChartLineResumenAvance {\r\n  title: string;\r\n}\r\nconst CChartLineResumenAvance = ({ title }: CChartLineResumenAvance) => {\r\n  const [{ graficoLineal, titulo, tituloX, tituloY }, setData] = useState<IDataChartLineal>({\r\n    graficoLineal: [[\r\n      \"PrecioTotal\",\r\n      \"Nombre completo\",\r\n      \"Precio\",\r\n      \"Nombre completo\",\r\n      \"Dia\"\r\n    ]],\r\n    titulo: '',\r\n    tituloX: '',\r\n    tituloY: ''\r\n  });\r\n\r\n  const apiChartLineal = async () => {\r\n    const { data } = await ChartLinealService();\r\n    setData({\r\n      graficoLineal: data.data.graficoLineal,\r\n      titulo: data.data.titulo,\r\n      tituloX: data.data.tituloX,\r\n      tituloY: data.data.tituloY\r\n    });\r\n    console.log('Data entrante ', data.data)\r\n  }\r\n  useEffect(() => {\r\n    apiChartLineal();\r\n\r\n    return () => {\r\n\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Card sx={{ minWidth: '100%', m: 0 }} >\r\n      <React.Fragment>\r\n        <CardContent>\r\n          <Typography variant=\"caption\" component=\"h6\" style={{ fontWeight: 'bold' }} align=\"center\" >\r\n            {title}\r\n          </Typography>\r\n          <ChartLineHorizontal titulo={titulo} tituloX={tituloX} tituloY={tituloY} data={graficoLineal} />\r\n        </CardContent>\r\n      </React.Fragment>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CChartLineResumenAvance\r\n","import { Grid, Typography } from '@mui/material';\r\nimport ForestIcon from '@mui/icons-material/Forest';\r\nimport { CBreadcrumbs } from '../../Components/CBreadcrumbs';\r\nimport { DataGridMontesion } from './Components/DataGrid/DataGridMontesion';\r\nimport { ProximoRango } from './Components/ProximoRango/ProximoRango';\r\nimport { ResumenMontemeSion } from './Components/ListCardResumen/ResumenMonteSion';\r\nimport { Progreso } from './Progreso/Progreso';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport CChartLineResumenAvance from './Components/CChartLineResumenAvance/CChartLineResumenAvance';\r\nimport { ModalRangos } from '../../Components/Modal/ModalRangos';\r\n\r\nconst MonteSion = () => {\r\n    return (\r\n        <>\r\n            <CBreadcrumbs icon={<DashboardIcon />} nombreRoute={\"Tablero\"} route={\"/inicio\"} nombresRoutes={[\"monte sion\"]} routes={[\"#\"]}></CBreadcrumbs>\r\n            <Typography variant=\"subtitle1\" component=\"h6\" style={{ fontWeight: 'bold' }} sx={{ pl: 1, pr: 1 }}>\r\n                Monte Sion\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom sx={{ pl: 1, pr: 1 }}>\r\n                Resumen de ventas en grupo durante el mes\r\n            </Typography>\r\n            <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\" >\r\n                <ResumenMontemeSion previewLoad={4} />\r\n            </Grid>\r\n            <Grid container spacing={3} alignItems=\"center\" justifyContent=\"center\" sx={{ p: 1 }}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Progreso />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ProximoRango />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3} alignItems=\"center\" justifyContent=\"center\" sx={{ p: 1 }}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <CChartLineResumenAvance title='RESUMEN' />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3} alignItems=\"center\" justifyContent=\"center\" sx={{ p: 1 }}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography variant=\"body2\" gutterBottom sx={{ pl: 1, pr: 1 }}>\r\n                        Ventas realizadas\r\n                    </Typography>\r\n                    <DataGridMontesion />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\nexport default MonteSion;","import axios from 'axios';\r\nimport { AxiosRequest,AxiosResponse } from '../../Utils/Axios';\r\nimport { IResponseCard, IResponseHome, IResponseNovedades, IResponseTodosRangos } from './Interfaces/IHome';\r\n//llamada a interceptor\r\nAxiosRequest();\r\nAxiosResponse();\r\nexport async function TarjetaService() {\r\n    return await axios.get<IResponseCard>(`${process.env.REACT_APP_API_COMISIONES}api/home/tarjeta`);\r\n}\r\nexport async function NovedadesService() {\r\n    return await axios.get<IResponseNovedades>(`${process.env.REACT_APP_API_COMISIONES}api/home/novedades`);\r\n}\r\nexport async function HomeService() {\r\n    return await axios.get<IResponseHome>(`${process.env.REACT_APP_API_COMISIONES}api/home`);\r\n}\r\nexport async function TodosRangoService() {\r\n    return await axios.get<IResponseTodosRangos>(`${process.env.REACT_APP_API_COMISIONES}api/home/todos-rangos`);\r\n}"],"names":["CardDetail","imagen","descripcion","detalle","rango","color","onClick","sx","minWidth","style","alignItems","background","display","padding","component","width","image","process","alt","loading","variant","m","align","fontWeight","cursor","margin","textAlign","ChartGauge","tipoValor","max","min","value","porcentaje","option","series","type","center","startAngle","endAngle","splitNumber","itemStyle","progress","show","pointer","axisLine","lineStyle","axisTick","distance","splitLine","length","axisLabel","fontSize","formatter","anchor","title","detail","valueAnimation","lineHeight","borderRadius","offsetCenter","data","name","className","height","opts","renderer","ModalRangos","props","navigate","useNavigate","React","scroll","onClose","selectedValue","open","Dialog","DialogTitle","Typography","DialogContent","List","listRangos","map","i","ListItem","disableGutters","ListItemButton","enUso","subtitulo","titulo","useState","rangos","setRangos","setCarga","getTarjetas","TodosRangoService","status","todosRangos","console","log","useEffect","e","DataGridMonteSionService","axios","ResumenMonteSionService","SiguenteNivelService","ProgresoService","ChartLinealService","AxiosRequest","AxiosResponse","DataGridMontesion","setLoading","columnName","tableColumnExtensions","columns","rows","setRows","direction","sorting","setSorting","dateColumnVentas","columnVentas","toLocaleString","CurrencyVentas","formatterComponent","loadDataGrid","dataGrid","ele","push","cantidad","nombreCompleto","generacion","Num","ventas","precio","Paper","position","for","onSortingChange","columnExtensions","showSortingControls","Loading","InitialState","allRangos","rangoActual","siguenteRango","ProximoRango","setOpen","SiguentenivelApi","Grid","container","spacing","item","xs","sm","event","CModalRangos","ResumenMontemeSion","previewLoad","nagivate","dispatch","useDispatch","tarjetas","setTarjetas","carga","err","detectError","ErrorAxios","response","token","statusToken","setToken","route","tarjeta","CCardResumen","icon","monto","valor","routeApp","textToolip","estado","initialState","Progreso","setProgreso","ProgresoApi","headers","Card","CardContent","ChartLineHorizontal","tituloX","tituloY","responsive","scale","scaleSize","grid","top","dataset","id","source","fromDatasetId","transform","config","and","dimension","gte","text","textStyle","fontFamily","tooltip","trigger","xAxis","nameLocation","nameTextStyle","verticalAlign","yAxis","nameGap","datasetId","showSymbol","valueFormatter","otro","encode","x","y","itemName","graficoLineal","setData","apiChartLineal","CBreadcrumbs","Dashboard","nombreRoute","nombresRoutes","routes","pl","pr","gutterBottom","justifyContent","p","TarjetaService","NovedadesService","HomeService"],"sourceRoot":""}